import mongoose from 'mongoose';

const vulnerabilitySchema = new mongoose.Schema({
  subdomainId: {
    type: mongoose.Schema.Types.ObjectId,
    ref: 'Subdomain',
    required: [true, 'Subdomain ID is required']
  },
  type: {
    type: String,
    required: [true, 'Vulnerability type is required']
  },
  severity: {
    type: String,
    enum: ['Low', 'Medium', 'High', 'Critical'],
    required: [true, 'Severity is required']
  },
  status: {
    type: String,
    enum: ['Found', 'Not Found', 'Not Yet Done'],
    default: 'Not Yet Done'
  },
  notes: {
    type: String,
    default: ''
  },
  screenshots: [{
    url: String,
    uploadedAt: {
      type: Date,
      default: Date.now
    }
  }]
}, {
  timestamps: true,
  collection: 'vulnerabilities'
});

// Compound index for faster queries
vulnerabilitySchema.index({ subdomainId: 1, type: 1 });

const Vulnerability = mongoose.models.Vulnerability || mongoose.model('Vulnerability', vulnerabilitySchema);
export default Vulnerability; 